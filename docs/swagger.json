{
    "swagger": "2.0",
    "info": {
        "contact": {},
        "license": {}
    },
    "paths": {
        "/pull": {
            "post": {
                "description": "Pull an image with authentication by image name. Your should set -cracct and -crpwd flag for username and password when running the console.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Pull an image with authentication",
                "parameters": [
                    {
                        "description": "the body content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Image"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the sample of body is {\\\"msg\\\": \\\"message\\\", \\\"err\\\":\\\"message\\\"}",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/rm": {
            "post": {
                "description": "Remove a container by container name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Remove a container",
                "parameters": [
                    {
                        "description": "the body content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Container"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the sample of body is {\\\"msg\\\": \\\"message\\\", \\\"err\\\":\\\"message\\\"}",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/rmi": {
            "post": {
                "description": "Remove an image by image name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Remove an image",
                "parameters": [
                    {
                        "description": "the body content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Image"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the sample of body is {\\\"msg\\\": \\\"message\\\", \\\"err\\\":\\\"message\\\"}",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/run": {
            "post": {
                "description": "It do create and start to run the container a container by container name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Run a container",
                "parameters": [
                    {
                        "description": "the body content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ContainerConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the sample of body is {\\\"msg\\\": \\\"message\\\", \\\"err\\\":\\\"message\\\"}",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/stop": {
            "post": {
                "description": "Stop a container by container name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Stop a container",
                "parameters": [
                    {
                        "description": "the body content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Container"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the sample of body is {\\\"msg\\\": \\\"message\\\", \\\"err\\\":\\\"message\\\"}",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/updaterunningcontainer": {
            "post": {
                "description": "It do 1. stop container, 2. remove container 3. remove image 4. pull image 5. run container.  If one step failed, then it stop immediately.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a running container",
                "parameters": [
                    {
                        "description": "the body content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ContainerConfigWithAuth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the sample of body is {\\\"msg\\\": \\\"message\\\", \\\"err\\\":\\\"message\\\"}",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Container": {
            "type": "object",
            "required": [
                "containerName"
            ],
            "properties": {
                "containerName": {
                    "type": "string",
                    "example": "dockerapp"
                }
            }
        },
        "main.ContainerConfig": {
            "type": "object",
            "required": [
                "containerName",
                "exportPort",
                "hostIP",
                "hostPort",
                "imageNameTag"
            ],
            "properties": {
                "containerName": {
                    "type": "string",
                    "example": "dockerapp"
                },
                "env": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "abc=123",
                        "xyz=999"
                    ]
                },
                "exportPort": {
                    "type": "string",
                    "example": "80"
                },
                "hostIP": {
                    "type": "string",
                    "example": "0.0.0.0"
                },
                "hostPort": {
                    "type": "string",
                    "example": "8080"
                },
                "imageNameTag": {
                    "type": "string",
                    "example": "mileslin/dockerlab:latest"
                },
                "restartPolicy": {
                    "type": "string",
                    "example": "always"
                }
            }
        },
        "main.ContainerConfigWithAuth": {
            "type": "object",
            "required": [
                "containerName",
                "exportPort",
                "hostIP",
                "hostPort",
                "imageNameTag"
            ],
            "properties": {
                "containerName": {
                    "type": "string",
                    "example": "dockerapp"
                },
                "env": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "abc=123",
                        "xyz=999"
                    ]
                },
                "exportPort": {
                    "type": "string",
                    "example": "80"
                },
                "hostIP": {
                    "type": "string",
                    "example": "0.0.0.0"
                },
                "hostPort": {
                    "type": "string",
                    "example": "8080"
                },
                "imageNameTag": {
                    "type": "string",
                    "example": "mileslin/dockerlab:latest"
                },
                "restartPolicy": {
                    "type": "string",
                    "example": "always"
                },
                "withAuth": {
                    "type": "boolean"
                }
            }
        },
        "main.Image": {
            "type": "object",
            "required": [
                "imageNameTag"
            ],
            "properties": {
                "imageNameTag": {
                    "type": "string",
                    "example": "mileslin/dockerlab:latest"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}